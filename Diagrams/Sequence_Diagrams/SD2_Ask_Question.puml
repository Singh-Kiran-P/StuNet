@startuml Ask Question
participant Question
participant User
participant Course
participant Topic
participant File
participant FileSystem
participant DataAccessObject
database DataStore

DataAccessObject-[hidden]->DataAccessObject

title Reference: Contract SubmitQuestion()

-> Question: askQuestion(userID, title, body, files, courseID, topicIDs)
activate Question
Question -> User: validateUser(userID)
activate User
User -> DataAccessObject: getUser(userID)
activate DataAccessObject
DataAccessObject -> DataStore: load()
activate DataStore
DataStore -> DataStore: query()
DataStore --> DataAccessObject: User
deactivate DataStore
User <-- DataAccessObject: User | null
deactivate DataAccessObject
Question <-- User: User | null
deactivate User
alt Valid user
	Question -> Course: getCourse(courseID)
	activate Course
	Course -> DataAccessObject: getCourse(courseID)
	activate DataAccessObject
	DataAccessObject -> DataStore: load()
	activate DataStore
	DataStore -> DataStore: query()
	DataStore --> DataAccessObject: Course
	deactivate DataStore
	DataAccessObject --> Course: Course
	deactivate DataAccessObject
	Course --> Question: Course
	deactivate Course
	Question -> DataAccessObject: saveQuestion(User, title, body, Course)
	activate DataAccessObject
	DataAccessObject -> DataStore: save()
	activate DataStore
	DataStore -> DataStore: query()
	DataStore --> DataAccessObject: Question
	deactivate DataStore
	DataAccessObject --> Question: Question
	deactivate DataAccessObject
	opt Link topics
		loop Link topic
			Question -> Topic: linkTopic(Question, topicID)
			activate Topic
			Topic -> DataAccessObject: linkTopic(Question, topicID)
			activate DataAccessObject
			DataAccessObject -> DataStore: save()
			activate DataStore
			DataStore -> DataStore: query()
			DataStore --> DataAccessObject: Topic
			deactivate DataStore
			DataAccessObject --> Topic: Topic
			deactivate DataAccessObject
			Topic --> Question: Topic
			deactivate Topic
		end
	end
	opt Link files
		loop Link file
			Question -> File: linkFile(Question, file)
			activate File
			File -> FileSystem: saveFile(file)
			activate FileSystem
			FileSystem -> FileSystem: save()
			File <-- FileSystem: fileName
			deactivate FileSystem
			File -> DataAccessObject: linkFile(Question, fileName)
			activate DataAccessObject
			DataAccessObject -> DataStore: save()
			activate DataStore
			DataStore -> DataStore: query()
			DataStore --> DataAccessObject: File
			deactivate DataStore
			DataAccessObject --> File: File
			deactivate DataAccessObject
			File --> Question: File
			deactivate File
		end
	end
	<-- Question: Question
	deactivate Question
else Invalid user
	<-- Question: null
end

@enduml
